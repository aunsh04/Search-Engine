proving the correctness of heuristically optimized code system for proving that programs written in high level language are correctly translated to low level language is described primary use of the system is as post optimization step in code generation the low level language programs need not be generated by compiler and in fact could be hand coded examples of the usefulness of such system are given some interesting results are the ability to handle programs that implement recursion by bypassing the start of the program and the detection and pinpointing of wide class of errors in the low level language programs the examples demonstrate that optimization of the genre of this paper can result in substantially faster operation and the saving of memory in terms of program and stack sizes cacm july 1978 samet compilers correctness code optimization debugging program verification lisp 4.12 4.21 4.22 5.24 ca780708 dh february 1979 53 pm