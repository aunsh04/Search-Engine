abstraction and verification in alphard defining and specifying iteration and generators the alphard form provides the programmer with great deal of control over the implementation of abstract data types in this paper the abstraction techniques are extended from simple data representation and function definition to the iteration statement the most important poin of interaction between data and the control structure of the language itself means of specializing alphard loops to operate on abstract entities without explicit dependence on the representation of those entities is in troduced specification and verification techniques that allow the properties of the generators for such iterations to be expressed in the form of proof rules are developed results are obtained that for common special cases of these loops are essentially identical to the corresponding constructs in other languages means of showing that generator will terminate is also provided cacm august 1977 shaw wulf abstraction and representation abstract data types assertions control specialization correctness generators invariants iteration statements modular decomposition program specifications programming languages programming methodology proofs of correctness types verification 4.20 5.24 ca770803 jb december 28 1977 59 am